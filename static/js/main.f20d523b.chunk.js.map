{"version":3,"sources":["firebase.js","components/MainPage/Loader.js","components/MainPage/HabitsPage/ProgressPercentageChart.js","components/MainPage/HabitsPage/ConfirmationModal.js","components/MainPage/HabitsPage/HabitList/HabitListStyle.js","components/MainPage/HabitsPage/HabitList/HabitList.js","components/MainPage/HabitsPage/InputHabitTitle.js","components/MainPage/HabitsPage/ToastHabit.js","components/MainPage/HabitsPage/HabitsPage.js","components/MainPage/StatsPage/Stats.js","components/MainPage/StatsPage/StatsPage.js","components/MainPage/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Loader","react_default","a","createElement","Container","className","Spinner","animation","role","Component","ProgressPercentageChart","dist_default","data","value","this","props","percentage","color","startOffset","cy","cx","totalValue","lineWidth","startAngle","rounded","label","_ref","dataIndex","Math","round","labelStyle","fontSize","fontFamily","labelPosition","style","width","height","margin","React","ConfirmationModal","Modal","overflowY","show","showmodal","onHide","handleCloseModal","Header","closeButton","Title","Body","Footer","Button","variant","onClick","handleConfirm","StyledCol","styled","div","_templateObject","HabitList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getFormatedDaysArray","daysInMonthMoment","moment","daysInMonth","arrFormatDates","formatDate","date","toISOString","split","push","reverse","checkIfActive","habit","dates","find","pushDate","addDate","datesFirebaseRef","set","then","addPoint","removeDate","orderByChild","equalTo","once","snapshot","dataId","val","keys","child","remove","subtractPoint","points","state","length","idHabitFirebaseRef","update","habitPoints","setPercentage","changeIntoPercentage","part","total","ceil","setState","handleChange","e","inputHabitTitle","target","editHabitTitle","editingTask","saveHabitTitle","habitTitle","errorInput","deleteHabit","askToConfirmRemoval","showModal","confirm","confirmed","title","idkey","database","ref","daysInCurrentMonthArr","number","active","_this2","_this$state","fontWeight","marginBottom","type","input","focus","onChange","onKeyPress","key","size","ConfirmationModal_ConfirmationModal","handleHide","Row","Col","md","sm","map","index","rowClass","data-date","handleClickOnTask","ProgressPercentageChart_ProgressPercentageChart","InputHabitTitle","InputGroup","FormControl","placeholder","aria-label","aria-describedby","boxShadow","error","inputHabit","Append","handleClick","borderColor","backgroundColor","ToastHabit","showToast","Toast","onClose","handleCloseToast","zIndex","position","background","bottom","left","autohide","HabitsPage_templateObject","HabitsPage","handleChangeOnInput","inputText","inputNewHabit","addNewHabit","currentMonth","disableBtn","timeout","setCurrentMonth","currentMonthMoment","format","Fragment","ToastHabit_ToastHabit","padding","InputHabitTitle_InputHabitTitle","habits","HabitList_HabitList","Stats","now","textAlign","ProgressBar","concat","StatsPage","flexDirection","marginTop","Stats_Stats","MainPage_templateObject","MainPage","setHabits","on","newState","loading","MainPage_StyledCol","Loader_Loader","react_router_dom","basename","process","Navbar","Brand","href","Nav","to","react_router","path","exact","render","MainPage_HabitsPage_HabitsPage","MainPage_StatsPage_StatsPage","App","components_MainPage_MainPage","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f20d523b.chunk.js","sourcesContent":["\t// import firebase from 'firebase'\nconst firebase = require('firebase/app');\n// require('firebase/auth');\nrequire('firebase/database');\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBczyXF8LB_35hI6awLk4lyYfjNPzN5bIo\",\n    authDomain: \"habit-tracker-ade9c.firebaseapp.com\",\n    databaseURL: \"https://habit-tracker-ade9c.firebaseio.com\",\n    projectId: \"habit-tracker-ade9c\",\n    storageBucket: \"habit-tracker-ade9c.appspot.com\",\n    messagingSenderId: \"552514933256\",\n    appId: \"1:552514933256:web:24f0cee2d4931841\"\n  };\n  // Initialize\n\nfirebase.initializeApp(firebaseConfig)\n\n\nexport default firebase","import React, { Component } from 'react';\nimport { Container, Spinner} from 'react-bootstrap';\n\nexport default class Loader extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Container className=\"container__loading\">\n\t\t\t<p>Wczytywanie...</p>\n\t\t\t<Spinner animation=\"border\" role=\"status\">\n\t\t\t<span className=\"sr-only\">Wczytywanie...</span>\n\t\t\t</Spinner>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactMinimalPieChart from 'react-minimal-pie-chart';\n\nexport default class ProgressPercentageChart extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<ReactMinimalPieChart\n\t\t\tdata={[{\n\t\t\t\tvalue: this.props.percentage,\n\t\t\t\tcolor: '#28a745',\n\t\t\t\tstartOffset: 0,\n\t\t\t}]}\n\t\t\tcy={50}\n\t\t\tcx={50}\n\t\t\ttotalValue={100}\n\t\t\tlineWidth={20}\n\t\t\tstartAngle={270}\n\t\t\trounded\n\t\t\tlabel={({ data, dataIndex }) =>\n\t\t\tMath.round(data[dataIndex].percentage) + '%'\n\t\t}\n\t\tlabelStyle={{\n\t\t\tfontSize: '25px',\n\t\t\tfontFamily: 'sans-serif'\n\t\t}}\n\t\tlabelPosition={0}\n\t\tstyle={{width: \"100px\", height: \"100px\", margin: '10px'}}\n\t\t/>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nexport default class ConfirmationModal extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal style={{overflowY: 'auto'}}show={this.props.showmodal} onHide={this.props.handleCloseModal}>\n\t\t\t<Modal.Header closeButton>\n\t\t\t<Modal.Title>Potwierdź usunięcie</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>Czy na pewno chcesz usunąć ten nawyk?</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t<Button variant=\"secondary\" onClick={this.props.handleCloseModal}>\n\t\t\tAnuluj\n\t\t\t</Button>\n\t\t\t<Button variant=\"danger\" onClick={this.props.handleConfirm}>\n\t\t\tTak\n\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\n\t\t\t);\n\t\t}\n\t}\n","import styled from 'styled-components';\n\nexport const StyledCol = styled.div`\npadding: 20px;\nborder: 1px solid #ddd;\nmargin: 10px -10px; \nbackground: #fff;\nborder-radius: 5px;\nuser-select: none;\nbox-shadow: 0px 2px 3px rgba(0,0,0,.03), 1px 2px 2px rgba(0,0,0,.03), -1px -2px 2px rgba(0,0,0,.05);\n\n@media screen and (max-width: 769px){\n\tmargin: 10px\n}\n.col {\n\tmargin: 2px;\n\tcursor: pointer;\n    user-select: none;\n    line-height: 30px;\n}\n.fa {\n\tdisplay: none\n}\n.task {\n    border-radius: 5px;\n    background: #eee;\n\t// border: 1px solid #28a745;\n\twidth: 30px;\n\theight: 30px;\n\tflex: 0 0 30px;\n\tpadding: 0;\n\ttransition: background ease-in-out .09s\n\t&:hover {\n\t\tbackground: rgb(40, 167, 69, .5);\n\t\tcolor: #000;\n\t}\n}\n.taskDone.col{\n\tcolor: white;\n\tbackground: #28a745;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\t&:hover {\n\t\tbackground: rgb(40, 167, 69, .5);\n\t}\n}\n@media (hover: none) {\n\t.taskDone.col:hover {\n\t\tbackground: #28a745;\n\t}\n}\n.habit-title {\n\tdisplay: inline-block;\n\tmax-width: 80%;\n\tborder: 2px solid transparent;\n}\n.habit-btns {\n\tfloat: right;\n\tcolor: #ddd;\n}\n.input-title {\n\tmargin-left: -7px;\n\tpadding-left: 8px;\n\toutline: none;\n\tborder: 1px solid #007bff;\n\twidth: 75%;\n\tfont-weight: bold;\n\t@media screen and (max-width: 769px){\n\t\twidth: 60%\n\n\t}\n}\n.col__progress {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n\t@media screen and (max-width: 769px){\n\t\tmargin-top: 20px\n\n\t}\n}\n.habit__wrap {\n\tmin-width: 245px;\n\tflex-wrap: wrap;\n\talignItems: center;\n\tdisplay: flex; \n}\n.title__wrap {\n\ttext-align: left;\n    min-height: 40px;\n    border-bottom: 1px solid #ddd;\n\tmargin-bottom: 15px;\n}\n`","import React, { Component } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport firebase from '../../../../firebase.js'\nimport moment from 'moment';\nimport ProgressPercentageChart from '../ProgressPercentageChart.js';\nimport ConfirmationModal from '../ConfirmationModal.js';\nimport find from 'lodash/find';\n\n// import TaskCol from './TaskCol.js'\n\nimport { StyledCol } from './HabitListStyle.js';\n\n\nexport default class HabitList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            daysInMonth: [],\n            inputHabitTitle: this.props.habit.title,\n            editingTask: false,\n            confirmed: false,\n            showModal: false,\n            errorInput: false,\n            percentage: 0,\n            // active: null\n        }\n        const { idkey } = this.props.habit;\n        this.datesFirebaseRef = firebase.database().ref('habits/' + idkey).child('dates');\n        this.idHabitFirebaseRef = firebase.database().ref('habits/' + idkey);\n        // const { habit } = this.props\n    }\n\n\n    componentDidMount() {\n        let daysInCurrentMonthArr = this.getFormatedDaysArray();\n        this.setState({\n            daysInMonth: daysInCurrentMonthArr,\n        })\n\n        this.setPercentage()\n    }\n\n    //DATES FORMAT: DD-MM-YYYY\n    getFormatedDaysArray = () => {\n        let daysInMonthMoment = moment().daysInMonth(); // 30\n        let arrFormatDates = [];\n\n        while (daysInMonthMoment) {\n            let date = moment().date(daysInMonthMoment);\n            let formatDate = date.toISOString().split('T')[0];\n            arrFormatDates.push(formatDate);\n            daysInMonthMoment--;\n        }\n        return arrFormatDates.reverse(); //[\"2019-06-01\", ...]\n    }\n\n\n\n    handleClickOnTask(number, active){ // add/remove date for each task\n        if (active) {\n            this.removeDate(number)\n            return;\n        }\n        this.addDate(number)\n    }\n\n    checkIfActive = (date) => {\n        if(!this.props.habit.dates)\n            return false;\n\n        return typeof find(this.props.habit.dates, {'pushDate': date} ) !== 'undefined'\n    }\n\n    // DATES\n    addDate = date => {\n        let pushDate = date;\n        let newPushedRef = this.datesFirebaseRef.push();\n        newPushedRef.set({ pushDate }).then(() =>\n            this.addPoint()\n        );\n    }\n\n\n    removeDate = date => {\n        let removeRefs = this.datesFirebaseRef.orderByChild('pushDate').equalTo(date);\n        removeRefs.once('value', snapshot => {\n            let data = snapshot.val()\n            let dataId;\n            if(data) {\n                dataId = Object.keys(data)[0]\n            }\n            this.datesFirebaseRef.child(dataId).remove() \n        }).then(() => {\n            this.subtractPoint()\n        })\n    }\n\n    // POINTS\n    addPoint = () => {\n        if (this.props.habit.points >= 0 && (this.props.habit.points <= (this.state.daysInMonth.length - 1))) {\n            this.idHabitFirebaseRef.update({ habitPoints: this.props.habit.points + 1 }).then(() => {\n                this.setPercentage()\n            });\n        }\n    }\n\n    subtractPoint = () => {\n        if (this.props.habit.points === 0)\n            return;\n        this.idHabitFirebaseRef.update({ habitPoints: this.props.habit.points - 1 }).then(() => {\n            this.setPercentage()\n        });\n    }\n\n    // PERCENTAGES\n    changeIntoPercentage = (part, total) => {\n        return Math.ceil(100 * part / total);\n    }\n    setPercentage = () => {\n        let percentage = this.changeIntoPercentage(this.props.habit.points, moment().daysInMonth());\n        this.setState({\n            percentage\n        })\n    }\n\n    // HABIT TITLES\n    handleChange = e => {\n        this.setState({ inputHabitTitle: e.target.value });\n    }\n\n    editHabitTitle = e => {\n        if (this.state.editingTask) {\n            this.setState({ editingTask: false })\n        } else {\n            this.setState({ editingTask: true })\n        }\n    }\n\n    saveHabitTitle = e => {\n        if (this.state.inputHabitTitle.length === 0) {\n            this.setState({ errorInput: true })\n            return;\n        }\n        this.idHabitFirebaseRef.update({ habitTitle: this.state.inputHabitTitle });\n        this.setState({ editingTask: false, errorInput: false })\n    }\n\n    //REMOVING HABITS\n    deleteHabit = () => {\n        this.idHabitFirebaseRef.remove();\n    }\n\n    askToConfirmRemoval = () => {\n        this.setState({ showModal: true })\n    }\n\n    confirm = () => {\n        this.setState({ confirmed: true, showModal: false })\n        this.deleteHabit()\n    }\n\n    handleCloseModal = () => {\n        this.setState({ showModal: false })\n    }\n\n    render() {\n        const { habit } = this.props;\n\n        const { daysInMonth, editingTask, inputHabitTitle, errorInput, showModal, percentage } = this.state;\n\n\n\n        return (\n            <StyledCol className=\"col-md-6 col-sm-12\">\n\n                <div className=\"title__wrap\">\n                    <p style={{ fontWeight: 'bold', marginBottom: '5px' }}>\n\n                        {!editingTask && <span className=\"habit-title\">{habit.title}</span>}\n                        {editingTask &&\n                            <input type=\"text\"\n                                className={errorInput ? 'input-title error' : 'input-title'}\n                                ref={input => input && input.focus()}\n                                value={inputHabitTitle}\n                                onChange={this.handleChange}\n                                onKeyPress={e => { if (e.key === 'Enter') { this.saveHabitTitle() } }}\n                            />\n                        }\n                        <span className=\"habit-btns\">\n                            {!editingTask\n                                ?\n                                <Button variant=\"light mr-2\" size=\"sm\" onClick={this.editHabitTitle} title=\"edytuj tytuł\"><i className=\"fas fa-edit\" ></i></Button>\n                                :\n                                <Button variant=\"light mr-2\" size=\"sm\" onClick={this.saveHabitTitle} title=\"zapisz\"><i className=\"fas fa-check\"></i></Button>\n                            }\n                            <Button variant=\"light\" size=\"sm\" onClick={this.askToConfirmRemoval} title=\"usuń\"><i className=\"far fa-trash-alt\" ></i></Button>\n                        </span>\n                    </p>\n\n                    <ConfirmationModal\n                        showmodal={showModal}\n                        handleConfirm={this.confirm}\n                        handleHide={this.handleHide}\n                        handleCloseModal={this.handleCloseModal}\n                    />\n\n                </div>\n                <Row>\n                    <Col md={7} sm={12}>\n                        <div className=\"habit__wrap\">\n                            {daysInMonth.map(\n                                (date, index) => {\n                                   \n                                    const active = this.checkIfActive(date)\n                                    const rowClass = active ? 'task taskDone' : 'task'\n                                    \n                                    return <Col key={date} className={rowClass} data-date={date} onClick={() => this.handleClickOnTask(date, active)}>{index + 1}</Col>\n\n                                }\n                            )}\n                        </div>\n                    </Col>\n\n                    <Col className=\"col__progress\" md={5} sm={12}>\n                        <p className=\"mb-0\">Postęp:</p>\n                        <ProgressPercentageChart percentage={percentage} />\n                        <p>{habit.points}/30</p>\n                    </Col>\n                </Row>\n\n            </StyledCol>\n        );\n    }\n}\n","import React from 'react';\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\n\nexport default class InputHabitTitle extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t\n\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t<FormControl ref=\"taskInput\"\n\t\t\tplaceholder=\"wpisz nazwę...\"\n\t\t\taria-label=\"nazwa\"\n\t\t\taria-describedby=\"basic-addon2\"\n\t\t\tonChange={this.props.handleChange}\n\t\t\tstyle={{boxShadow: 'none'}}\n\t\t\tclassName={this.props.error ? 'error' : ''}\n\t\t\tvalue={this.props.inputHabit}\n\t\t\t/>\n\t\t\t\n\t\t\t<InputGroup.Append>\n\t\t\t<Button onClick={this.props.handleClick} style={{borderColor: '#58a4b0', backgroundColor: '#58a4b0', boxShadow: 'none'}}>dodaj nowy nawyk</Button>\n\t\t\t</InputGroup.Append>\n\t\t\t</InputGroup>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport { Toast } from 'react-bootstrap';\n\nexport default class ToastHabit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: this.props.showToast\n    }\n  }\n  render() {\n\n    return (\n\n      <Toast onClose={this.props.handleCloseToast} style={{ zIndex: '1', position: 'fixed', background: 'white', bottom: '20px', left: '20px' }} show={this.props.showToast} autohide>\n        <Toast.Header>\n          <strong className=\"mr-auto\">Stworzono nowy nawyk</strong>\n        </Toast.Header>\n      </Toast>\n\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport firebase from '../../../firebase.js'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport moment from 'moment'\nimport localization from 'moment/locale/pl'\n\nimport HabitList from './HabitList/HabitList.js';\nimport InputHabitTitle from './InputHabitTitle.js';\nimport ToastHabit from './ToastHabit.js';\n\nconst StyledCol = styled.div`\n\t.col {\n\t\tmargin: 2px;\n\t\tcursor: pointer;\n\t\tuser-select: none;\n\t}\n\n\t.calendar {\n\t\tcursor: default\n\t}\n\t.error {\n\t\tborder-color: red\n\t}\n\t.row__subtitle {\n\t\twidth: 100%;\n\t\tpadding: 20px 0;\n\t\tmargin: 20px 0 0 0;\n\t\tjustify-content: space-between;\n\t\t@media screen and (max-width: 769px){\n\t\t\tjustify-content: center\n\t\t\t.col-md-6 {\n\t\t\t\tpadding: 0 !important;\n\t\t\t}\n\t\t}\n\t\th2 {\n\t\t\ttext-transform: capitalize;\n\t\t}\n\t}\n\t.container__loading {\n\t\tdisplay: flex;\n\t\tjustify-content: center; \n\t\talign-items: center; \n\t\tflex-direction: column;\n\t\theight: 90vh;\n\t}\n\t.container__app {\n\t\tmax-width: 900px;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\tpadding: 5px;\n\t}\n\t.container__habits {\n\t\tmax-width: 900px;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: space-between;\n\t}\n\t.container__stats{\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tflex-direction: column;\n\t\tpadding: 20px;\n\t\tmax-width: 900px;\n\t\tborder: 1px solid #ddd;\n\t\tbackground: #fff;\n\t\tborder-radius: 5px;\n\t\tuser-select: none;\n\t\tbox-shadow: 0px 2px 3px rgba(0,0,0,.03), 1px 2px 2px rgba(0,0,0,.03), -1px -2px 2px rgba(0,0,0,.03);\n\t}\n\t.input__error {\n\t\tdisplay: block;\n\t\ttext-align: left;\n\t\tcolor: red;\n\t\tposition: absolute;\n\t\tbottom: 0\n\t}\n`\nclass HabitsPage extends Component {\n    constructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tinputNewHabit: '',\n\t\t\terror: false,\n\t\t\tcurrentMonth: '',\n\t\t\tdisableBtn: false,\n\t\t\tshowToast: false\n\t\t}\n\t\tthis.timeout = null;\n    }\n    componentDidMount() {\n        this.setCurrentMonth()\n    }\n \n\tsetCurrentMonth() {\n\t\tlet currentMonthMoment = moment().format(\"MMMM\");\n\t\tthis.setState({\n\t\t\tcurrentMonth: currentMonthMoment\n\t\t})\n\t}\n\n\thandleChangeOnInput = e => {\n\t\tlet inputText = e.target.value;\n\t\t// if (this.timeout)\n\t\t// \tclearTimeout(this.timeout);\n\t\t// this.timeout = setTimeout(() => {\n\t\tthis.setState({\n\t\t\tinputNewHabit: inputText,\n\t\t\terror: false\n\t\t})\n\n\t\t// }, 300);\n\t}\n\n\t// get value from input for creating new habit in database\n\taddNewHabit = (e) => {\n\t\t// this.setState({disableBtn : true});\n\t\tif (this.state.inputNewHabit.length === 0) {\n\t\t\tthis.setState({\n\t\t\t\terror: true\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t\t// const habitRef = firebase.database().ref('habits');\n\t\tfirebase.database().ref('habits').push({\n\t\t\thabitTitle: this.state.inputNewHabit,\n\t\t\thabitPoints: 0,\n\t\t\tdates: {},\n\t\t}).then(\n\t\t\tthis.setState({\n\t\t\t\tshowToast: true\n\t\t\t})\n\t\t);\n\t\tthis.setState({\n\t\t\terror: false,\n\t\t\tinputNewHabit: ''\n\t\t})\n\t}\n\thandleCloseToast = () => {\n\t\tthis.setState({\n\t\t\tshowToast: false\n\t\t})\n\t}\n\n\n    render() {\n        const {\n\t\t\terror,\n\t\t\tcurrentMonth,\n\t\t\tdisableBtn,\n\t\t\tinputNewHabit,\n\t\t\tshowToast\n\t\t} = this.state;\n\n        return (\n            <>\n            <ToastHabit showToast={showToast} handleCloseToast={this.handleCloseToast} />\n            <Container className=\"container__app\">\n                <Row className=\"row__subtitle\">\n                    <h2> {currentMonth} </h2>\n                    <Col md={6} style={{ padding: '0 0 0 10px' }}>\n                        <InputHabitTitle\n                            error={error}\n                            handleChange={this.handleChangeOnInput}\n                            handleClick={this.addNewHabit}\n                            className={disableBtn ? 'disabled' : null}\n                            inputHabit={inputNewHabit}\n                        // handleKeypress={ this.addNewHabit}\n                        />\n                        {error && <small className=\"input__error\">* pole jest wymagane </small>}\n                    </Col>\n                </Row>\n            </Container>\n\n            <Container className=\"container__habits\">\n                {\n                    this.props.habits.map((habit) => <HabitList habit={habit} key={habit.idkey} />)\n                }\n\n            </Container>\n            </>\n\n        );\n    }\n}\n\nexport default HabitsPage;","import React from 'react';\nimport { ProgressBar } from 'react-bootstrap';\n\nexport default class Stats extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            now: this.changeIntoPercentage()\n        }\n    }\n    changeIntoPercentage = (part, total) => {\n        return Math.ceil(100 * this.props.habit.points / 30);\n    }\n\n    render() {\n        return (\n            <>\n                <h5 style={{ textAlign: 'left' }}>{this.props.habit.title}</h5>\n                <ProgressBar variant=\"success\" now={this.state.now} label={`${this.state.now}%`} style={{ marginBottom: '20px', color: '#000' }} />\n\n            </>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Stats from './Stats.js';\n\nclass StatsPage extends Component {\n    render() {\n        return (\n            <Container className=\"container__app\" style={{ flexDirection: 'column' }}>\n                <Row className=\"row__subtitle\">\n                    <h2 className=\"text-left\">Statystki</h2>\n                </Row>\n                <Container className=\"container__stats mb-5\" style={{marginTop: '23px'}}>\n                    {\n                        this.props.habits.map((habit) => <Stats habit={habit} key={habit.idkey} />)\n                    }\n                </Container>\n            </Container>\n        );\n    }\n}\n\nexport default StatsPage;","import React, { Component } from 'react';\nimport firebase from './../../firebase.js'\nimport styled from 'styled-components';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Navbar, Nav, Container } from 'react-bootstrap';\n\nimport Loader from './Loader.js';\nimport HabitsPage from './HabitsPage/HabitsPage.js';\nimport StatsPage from './StatsPage/StatsPage.js';\nconst StyledCol = styled.div`\n\t.col {\n\t\tmargin: 2px;\n\t\tcursor: pointer;\n\t\tuser-select: none;\n\t}\n\n\t.calendar {\n\t\tcursor: default\n\t}\n\t.error {\n\t\tborder-color: red\n\t}\n\t.row__subtitle {\n\t\twidth: 100%;\n\t\tpadding: 20px 0;\n\t\tmargin: 20px 0 0 0;\n\t\tjustify-content: space-between;\n\t\t@media screen and (max-width: 769px){\n\t\t\tjustify-content: center\n\t\t\t.col-md-6 {\n\t\t\t\tpadding: 0 !important;\n\t\t\t}\n\t\t}\n\t\th2 {\n\t\t\ttext-transform: capitalize;\n\t\t}\n\t}\n\t.container__loading {\n\t\tdisplay: flex;\n\t\tjustify-content: center; \n\t\talign-items: center; \n\t\tflex-direction: column;\n\t\theight: 90vh;\n\t}\n\t.container__app {\n\t\tmax-width: 900px;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\tpadding: 5px;\n\t}\n\t.container__habits {\n\t\tmax-width: 900px;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: space-between;\n\t}\n\t.container__stats{\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tflex-direction: column;\n\t\tpadding: 20px;\n\t\tmax-width: 900px;\n\t\tborder: 1px solid #ddd;\n\t\tbackground: #fff;\n\t\tborder-radius: 5px;\n\t\tuser-select: none;\n\t\tbox-shadow: 0px 2px 3px rgba(0,0,0,.03), 1px 2px 2px rgba(0,0,0,.03), -1px -2px 2px rgba(0,0,0,.03);\n\t}\n\t.input__error {\n\t\tdisplay: block;\n\t\ttext-align: left;\n\t\tcolor: red;\n\t\tposition: absolute;\n\t\tbottom: 0\n\t}\n`\n\n\nclass MainPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\thabits: null,\n\t\t\tloading: true,\n\t\t}\n\t\tthis.timeout = null;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setHabits();\n\t}\n\n\n\tsetHabits = () => {\n\n\t\tconst habitRef = firebase.database().ref('habits');\n\t\thabitRef.on('value', snapshot => {\n\t\t\tlet habits = snapshot.val(); // mt\n\n\t\t\tlet newState = [];\n\t\t\tfor (let habit in habits) {\n\t\t\t\tnewState.push({\n\t\t\t\t\tidkey: habit,\n\t\t\t\t\ttitle: habits[habit].habitTitle,\n\t\t\t\t\tpoints: habits[habit].habitPoints,\n\t\t\t\t\tdates: habits[habit].dates,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\thabits: newState,\n\t\t\t\tloading: false\n\t\t\t})\n\t\t});\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tloading,\n\t\t\thabits,\n\t\t} = this.state;\n\n\t\t// if(!habits)\n\t\t// \treturn null;\n\n\t\treturn (\n\t\t\t<StyledCol>\n\n\t\t\t\t{loading && <Loader />}\n\t\t\t\t{!loading &&\n\t\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t\t<Navbar style={{ backgroundColor: '#373f51' }} variant=\"dark\">\n\t\t\t\t\t\t\t<Container className=\"container__app \">\n\t\t\t\t\t\t\t\t<Navbar.Brand href={process.env.PUBLIC_URL + '/'}>Habit tracker</Navbar.Brand>\n\t\t\t\t\t\t\t\t<Nav className=\"ml-auto\">\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to={'/'}>Nawyki</Link>\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to={'/stats'}>Statystyki</Link>\n\t\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t</Navbar>\n\n\t\t\t\t\t\t<Route path={'/'} exact render={() => <HabitsPage habits={habits} />} />\n\t\t\t\t\t\t<Route path={'/stats'} render={() => <StatsPage habits={habits} />} />\n\n\t\t\t\t\t</Router>\n\t\t\t\t}\n\t\t\t</StyledCol>\n\t\t);\n\t}\n}\n\nexport default MainPage;","import React, { Component } from 'react';\n\nimport './App.css';\nimport MainPage from './components/MainPage/MainPage';\n\n\nfunction App() {\n\n\n\treturn (\n\n\t\t<div className=\"App\">\n\n\t\t\t{/* <header className=\"App-header\">\n\t\t\t\t<h2 style={{ margin: '20px 0' }}>Habit tracker</h2>\n\n\t\t\t</header> */}\n\n\t\t\t<main>\n\t\t\t\t<MainPage />\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}